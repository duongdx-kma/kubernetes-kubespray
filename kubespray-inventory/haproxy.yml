- name: Setup load balancers
  hosts: haproxy
  become: yes
  vars:
    haproxy_version: "3.1.2"
    haproxy_prefix: "/usr/local/haproxy"
    haproxy_src_url: "https://www.haproxy.org/download/2.9/src/haproxy-{{ haproxy_version }}.tar.gz"
    haproxy_src_dir: "/usr/local/src/haproxy-{{ haproxy_version }}"
  tasks:
    - name: Install required packages
      apt:
        name:
          - build-essential
          - libpcre3
          - libpcre3-dev
          - libssl-dev
          - zlib1g-dev
          - libsystemd-dev
          - wget
          - tar
        state: present
        update_cache: yes

    - name: Download HAProxy source code
      get_url:
        url: "{{ haproxy_src_url }}"
        dest: "/usr/local/src/haproxy-{{ haproxy_version }}.tar.gz"
        mode: '0644'

    - name: Extract HAProxy source code
      unarchive:
        src: "/usr/local/src/haproxy-{{ haproxy_version }}.tar.gz"
        dest: "/usr/local/src"
        remote_src: yes

    - name: Compile HAProxy
      make:
        chdir: "{{ haproxy_src_dir }}"
        target: ""
        params:
          TARGET: linux-glibc
          USE_PCRE: "1"
          USE_OPENSSL: "1"
          USE_ZLIB: "1"
          USE_SYSTEMD: "1"
        jobs: "{{ ansible_processor_vcpus | default(2) }}"

    - name: Install HAProxy
      command: make install PREFIX={{ haproxy_prefix }}
      args:
        chdir: "{{ haproxy_src_dir }}"
      when: not ansible_check_mode

    - name: Create symlink to /usr/sbin/haproxy
      file:
        src: "{{ haproxy_prefix }}/sbin/haproxy"
        dest: "/usr/sbin/haproxy"
        state: link
        force: yes

    - name: Create HAProxy config directory
      file:
        path: /etc/haproxy
        state: directory
        mode: '0755'

    - name: Configure haproxy
      template:
        src: ./haproxy/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify: Restart haproxy

  handlers:
    - name: Restart haproxy
      systemd:
        name: haproxy
        state: restarted
        enabled: yes
        daemon-reload: yes